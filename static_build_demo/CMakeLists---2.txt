cmake_minimum_required(VERSION 3.21)
project(FFmpeg_Clion_Project)

set(CMAKE_CXX_STANDARD 14)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -v -stdlib=libc++ -framework OpenGL -framework AppKit -framework Security -framework CoreFoundation -framework CoreVideo -framework CoreMedia -framework QuartzCore -framework CoreFoundation -framework VideoDecodeAcceleration -framework Cocoa -framework AudioToolbox -framework VideoToolbox -framework OpenCL -framework CoreServices")

#function(include_sub_directories_recursively root_dir)
#    if (IS_DIRECTORY ${root_dir})               # 当前路径是一个目录吗，是的话就加入到包含目录
#        #        if (${root_dir} MATCHES "include")
#        message("include dir: " ${root_dir})
#        include_directories(${root_dir})
#        #        endif()
#    endif()
#
#    file(GLOB ALL_SUB RELATIVE ${root_dir} ${root_dir}/*) # 获得当前目录下的所有文件，让如ALL_SUB列表中
#    foreach(sub ${ALL_SUB})
#        if (IS_DIRECTORY ${root_dir}/${sub})
#            include_sub_directories_recursively(${root_dir}/${sub}) # 对子目录递归调用，包含
#        endif()
#    endforeach()
#endfunction()

#设置头文件路径
#set(INC_DIR ffmpeg_lib/include)
set(INC_DIR build_local_mac/include)
set(SDL_INC_DIR /usr/local/include/SDL2)

#设置链接库路径
#set(LINK_DIR ffmpeg_lib/lib)
set(LINK_DIR build_local_mac/lib)
set(LIB_LINK_DIR /usr/local/lib)

#引入头文件
include_directories(${INC_DIR})
include_directories(${SDL_INC_DIR})
include_directories(/usr/local/opt/openssl/include)

#引入库文件
link_directories(${LINK_DIR})
link_directories(${LIB_LINK_DIR})
link_directories(/usr/local/opt/openssl/lib)
link_directories(/usr/local/Cellar/x264/r3060/lib)
#link_directories(/usr/local/Cellar/libvpx/1.11.0/lib)
#link_directories(/usr/local/Cellar/libvorbis/1.3.7/lib)
#link_directories(/usr/local/Cellar/libvorbis/1.3.7/lib)
#link_directories(/usr/local/Cellar/aom/3.2.0_2/lib)
#link_directories(/usr/local/Cellar/openjpeg/2.4.0/lib)
#link_directories(/usr/local/Cellar/opus/1.3.1/lib)
#link_directories(/usr/local/Cellar/rav1e/0.5.0/lib)
#link_directories(/usr/local/Cellar/speex/1.2.0/lib)
#link_directories(/usr/local/Cellar/opencore-amr/0.1.5/lib/)

add_executable(FFmpeg_Clion_Project demo.cpp output_log.cpp)

#将第三方库连接在一起
target_link_libraries(FFmpeg_Clion_Project
        opencore-amrnb
        opencore-amrwb
        ssl
        libavcodec.a libavdevice.a libavfilter.a libavformat.a libavutil.a libpostproc.a libswresample.a libswscale.a
        pthread
        libSDL2.a
        x264
        )
